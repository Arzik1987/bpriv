% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/alg_nill.R
\name{alg.nill}
\alias{alg.nill}
\title{NILL algorithm}
\usage{
alg.nill(lpo, max.be = 1, max.bp = 0.5, be = 0.5, alpha = 0.5,
  voltage, interval, kst = "avg")
}
\arguments{
\item{lpo}{Energy demand series as nummeric vector, unit: kWh}

\item{max.be}{Battery's maximum capacity, unit: kWh}

\item{max.bp}{Battery's maximum charing and discharging rate, unit: kW}

\item{be}{Battery's current state of charge; 0 is empty, 1 is full}

\item{alpha}{Coefficient used to reset external load constant}

\item{voltage}{Used to convert between Amp and Watt, unit: volt}

\item{interval}{Demand metering interval, unit: minute}

\item{kst}{The initial value of the target load in the stable state, unit = kW.
if "first", the first value of demand time series is used. 
If "avg", the average value of demand time series is used.}
}
\description{
Moderates a energy demand series using a rechargable battery 
and applying NILL algorithm to obscure actual energy usage.
}
\details{
The NILL algorithm has three states. In stable state (ST), 
NILL tries to maintain external load at some value kst. When the 
battery is full, it moves to the high recovery state (HR), in 
which the external load will be set lower than the demand and 
the battery will be gradually discharged. The opposite case takes 
place when in stable state the battery is too low.
}
\examples{
set.seed(1)
d <- squares(20)
lpo <- d[, 1]/100
lpm <- alg.nill(lpo, voltage = 110, interval = 1, kst = "avg")
lpm1 <- alg.be(lpo, interval = 1)
plot(ts(lpo))
lines(ts(lpm), col = "blue")
lines(ts(lpm1), col = "red") # compare to Best Effort algorithm
}
\references{
[1] McLaughlin, Stephen, Patrick McDaniel, and William Aiello. 
"Protecting consumer privacy from electric load monitoring." 
Proceedings of the 18th ACM conference on Computer and 
communications security. ACM, 2011

[2] Yang, Weining, et al. "Minimizing private data 
disclosures in the smart grid." Proceedings of the 2012 ACM 
conference on Computer and communications security. ACM, 2012.
}
