% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/alg_stepping.R
\name{alg.stepping}
\alias{alg.stepping}
\title{Stepping algorithm}
\usage{
alg.stepping(lpo, max.be = 1, max.bp = 0.5, be = 0.5, interval = 1,
  regime = "ls1")
}
\arguments{
\item{lpo}{Energy demand series as nummeric vector, unit: kWh}

\item{max.be}{Battery's maximum capacity, unit: kWh}

\item{max.bp}{Battery's maximum charing rate, unit: kW}

\item{be}{Battery's current capacity level; 0 is empty, 1 is full}

\item{interval}{Demand metering interval, unit: minute}

\item{regime}{Defines the charging/discharging strategy within the steping
framework. Possible values are "ls1", "ls2", "lc" and "rc" corresponding 
to two versions of lasy stepping, lasy charging and random charging algorithms
respectively (see the details and the reference).}
}
\value{
A moderated energy series
}
\description{
Moderates a energy demand series using a rechargable battery 
and applying lazy stepping algorithm to obscure actual energy usage.
}
\details{
Lazy stepping algorithms try to maintain the external 
load unless it is pushed to change. There are three cases in 
which changes must occur: (1) When maintaining the load results 
in overcharging the battery, in which case the battery must be 
discharged; (2) When maintaining the load results in low battery, 
in which case the battery must be charged; and (3) when power 
demand is either too low or too high for the previous external load. 
We consider two alternatives, which we call LS1 and LS2. 
LS1 charges the battery if it is below half, and discharges 
it otherwise. LS2 randomly charges or discharges the battery.
LC tries to maintain charging state 
of battery until the battery is too low or too high. 
One advantage of the LC algorithm is that this reduces 
the number of charge/discharge cycles for the battery. 
One disadvantage of the LC algorithm is that it is generally 
easy to predict charging state of battery at some point.
In RC algorithm, the charging state of the
battery is set randomly each time a load demand comes in.
}
\examples{
set.seed(1)
d <- squares(20)
lpo <- d[, 1]/100
lpm.ls1 <- alg.stepping(lpo)
lpm.ls2 <- alg.stepping(lpo, regime = "ls2")
lpm.lc <- alg.stepping(lpo, regime = "lc")
lpm.rc <- alg.stepping(lpo, regime = "rc")

plot(ts(lpo))
lines(ts(lpm.ls1), col = "red")
lines(ts(lpm.ls2), col = "blue")
lines(ts(lpm.lc), col = "orange")
lines(ts(lpm.rc), col = "purple")
}
\references{
Yang, Weining, et al. "Minimizing private data 
disclosures in the smart grid." Proceedings of the 2012 
ACM conference on Computer and communications security. ACM, 2012.
}
